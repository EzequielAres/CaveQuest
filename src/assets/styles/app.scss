// Con este mixin podremos crear de forma más rápida un flex con alineación horizontal y vertical
@mixin flex($wrap, $align, $justify) {
    display: flex;
    flex-wrap: $wrap;
    align-items: $align;
    justify-content: $justify;
}

* {
    margin: 0;
    box-sizing: border-box;
}

// CSS HEADER

  // Con esta clase centramos los elementos del header y hacemos que ocupe el 100% de la página, le añadimos un padding y un borde inferior
.header {
    @include flex(wrap, center, space-between);
    margin-top: 1vh;
    width: 100%;
    border-bottom: 1px solid black;
}

  // Definimos el espaciado de la imagen y su tamaño
.header_logo {
    padding-left: 4rem;
    width: 14rem;
}

  // En esta clase, aprovechando el nesting sass colocamos los diferentes elementos del menú, con su espaciado y decoraciones
.header_menu {
    @include flex(wrap, center, center);
    padding-right: 4rem;

    ul {
      margin-top: -0.5rem;

        li {
            display: inline-block;
            padding: 1rem 3rem;
            
            a {
                color: black;
                text-decoration: none;
                font-size: 1.2rem;
                font-weight: bold;
            }

            a:hover {
                color: brown;
            }
        }
    }
}

// CSS VIDEO - Título

  // Declaramos la posición y el tamaño del contenedor del vídeo
.main_contenedorVideo {
    position: absolute;
    width: 100%;
    height: 89.3vh;
    overflow: hidden;
    border-top: 2px solid brown;
}

  // Colocamos el video en la posición y tamaño deseados, le añadimos un z-index para que podamos colocar el texto del título por delante del vídeo
.video {
    position: absolute;
    z-index: -1;
    top: 0;
    left: 0;
    width: 100%; 
    height: 89.3vh;
    object-fit: cover;
}

source {
  width: fit-content;
}

  // Posicionamos el contenedor del texto principal
.main_contenedorTitulo {
    @include flex(wrap, center, center);
    flex-direction: column;
    text-align: center;
    height: 89.3vh;
}

  // Las dos siguientes clases declaran la decoracion como el color y tamaño del título y su subtitulo
.main_contenedorTitulo_titulo {
    font-size: 5vw;
    color: white;
    padding-bottom: 1rem;
    -webkit-text-stroke: 0.1rem brown;
}

.main_contenedorTitulo_subtitulo {
    font-size: 2.5vw;
    color: white;
    -webkit-text-stroke: 0.05rem brown;
}


  
// CSS CARRUSEL ESCENARIOS

  // Declaramos el tamaño del contenedor principal del carrusel y el bloque de texto
.main_contenedorCarrusel {
  display: flex;
  width: 99.4vw;
  height: 68vh;
}

  // Declaramos el tamaño del contenedor del carrusel, las flechas y las imágenes que lo componen
.carousel {
  position: relative;
  width: 60vw;
  height: 68vh;

  img {
    width: 100%;
    height: 68vh;
    object-position: center center;
  }
}

  // Declaramos el posicionamiento y decoración de las flechas del carrusel, además de su comportamiento al hacer focus o al pasar el ratón por encima
.arrow {
  position: absolute;
  top: 46%;
  padding: 0;
  border-radius: 15px;
  border: 1px solid gray;
  font-size: 24px;
  line-height: 24px;
  color: #444;
  display: block;

  :focus {
    outline: none;
  }

  :hover {
    background: #ccc;
    cursor: pointer;
  }
}

  // Con las dos siguientes clases declaramos el espaciado que tienen las flechas con sus respectivos lados
.prev {
  left: 7px;
}

.next {
  right: 7px;
}

 // Definimos el tamaño que tendrá el contenedor de las imágenes
.gallery {
  width: 100%;
  height: 100%;
  overflow: hidden;

  ul {
    height: 130px;
    width: 9999px;
    margin: 0;
    padding: 0;
    list-style: none;
    transition: margin-left 250ms;
    font-size: 0;
  }

  li {
    display: inline-block;
  }
}

  // Definimos el tamaño del contenedor que tendrá el texto de los escenarios, le aplicamos un color y la disposición (flex)
.carousel_bloque {
  width: 40vw;
  height: 68vh;
  background-color: #9c7867;
  
  @include flex(wrap, center, center);
  flex-direction: column;
}

// Las dos siguientes clases especifican la decoración del título y texto de los escenarios
.bloque_Titulo {
  padding: 0vh 0vw 4vh 0vw;
  font-size: 3.3vw;
  text-align: center;
  font-weight: bold;
}

.bloque_Texto {
  text-align: justify;
  padding: 1vh 2vw;
  font-size: 1.4vw;
}

// CSS TABS PERSONAJES

  // Declaramos la disposición de los elementos dentro del contenedor perosnajes y su tamaño
.main_personajes {
  @include flex(wrap, center, center);
  width: 100%;


  // Declaramos el tamaño y posición del contenedor para las pestañas, luego colocamos las posiciones de los elementos ul e il, también le añadimos un color al elemento con la clase activo
.contenedorTabs {
  width: 55.5vw;
  padding: 1em;
  height: 60vh;

  ul {
    width: 100%;
    display: flex;
    flex-flow: row nowrap;
    justify-content: flex-start;
    align-items: center;

    li {
      padding: 1em;
      margin: 0 1em 0 0;
      border-radius: 0.5em;
      box-shadow: 1px 1px 40px;
      list-style: none;
      transition: all .4s ease;
    }

    .activo {
      background-color: lightblue;
    }
  }
}

  // Declaramos la disposición de los elementos que estén dentro del contenedor de las pestañas
.contenedorTabs_contenedorPestañas {
  position: relative;
  @include flex(wrap, center, center);
}

  // A continuación le damos algo de decoración y posicionamiento, también le agregamos una transición y lo hacemos opaco por defecto
.contenedorTabs_contenedorPestañas_bloque {
  padding: 0.5em;
  position: absolute;
  top: 1.5em;
  box-shadow: 1px 1px 40px;
  border-radius: 1.5rem;
  opacity: 0;

  transition: all .4s ease;
}

  // Le damos visibilidad a la pestaña que tenga la clase activo
.contenedorTabs_contenedorPestañas_bloque.activo {
  opacity: 1;
}

  // Como hemos hecho en la sección anterior, declaramos el tamaño, disposición de elementos y color del bloque de texto de los personajes
  .tabs_bloque2 {
    background-color: #9c7867;
    @include flex(wrap, center, center);
    flex-direction: column;

    width: 43.6vw;
    height: 60vh;
    margin-left: -0.3em;
  }
}

  // En las dos siguientes clases declaramos la decoración y espaciado del texto de los personajes
.bloque_Titulo2 {
  padding: 0vh 0vw 4vh 0vw;
  font-size: 3.3vw;
  text-align: center;
  font-weight: bold;
}

.bloque_Texto2 {
  text-align: justify;
  padding: 1vh 2vw;
  font-size: 1.4vw;
}

// CSS FOOTER

  // Declaramos el tamaño del footer y la disposición que tendrán sus elementos
.footer {
  @include flex(wrap, center, space-between);
  width: 100%;
  border-top: 2px solid brown;
  padding-top: 1vh;
}

  // Tamaño de la imagen y posicionamiento
.footer_logo {
  padding-left: 4rem;
  width: 14rem;
}

  // Posicionamiento y decoración de los diferentes textos del footer
.footer_menu {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  align-content: center;
  padding-right: 4rem;

  ul {
    margin-top: -0.5rem;

      li {
          display: inline-block;
          padding: 1rem 3rem;
          
          a {
              color: black;
              text-decoration: none;
              font-size: 1.3rem;
              font-weight: bold;
          }

          a:hover {
              color: brown;
          }
      }
  }
}

// A continuación declararemos distintos puntos en los que iremos cambiando pequeños elementos para hacer la página responsive

@media (max-width: 1465px) {

  // Cambiamos el tamaño y espaciado de las letras del footer
  .footer_menu {
    padding-right: 1rem;

    ul {

        li {
            padding: 1rem 1rem;

            a {
                font-size: 1.4vw;
            }
        }
    }
  }
}

@media (max-width: 1050px) {
  
  // Cambiamos el espaciado y el tamaño de las letras en las siguientes clases
  .bloque_Titulo {
    padding: 0vh 0vw 4vh 0vw;
    font-size: 4.3vw;
  }
  
  .bloque_Texto {
    padding: 1vh 2vw;
    font-size: 2vw;
  }

  .bloque_Titulo2 {
    padding: 0vh 0vw 4vh 0vw;
    font-size: 4.3vw;
  }
  
  .bloque_Texto2 {
    padding: 1vh 2vw;
    font-size: 2vw;
  }

  // Cambiamos el espaciado y tamaño del logo del footer
  .footer_logo {
    padding-left: 1rem;
    width: 9rem;
  }
}

@media (max-width: 770px) {

  // Cambiamos el espaciado y el tamaño de las letras del header
  .header_menu {
    padding-right: 1rem;

    ul {

        li {
            padding: 1rem 1rem;

            a {
                font-size: 0.8rem;
            }
        }
    }
  }

  // Cambiamos el espaciado y el tamaño del logo del header
  .header_logo {
    padding-left: 1rem;
    width: 9rem;
  }

  // Cambiamos el tamaño de las letras del título y subtítulo
  .main_contenedorTitulo_titulo {
    font-size: 8vw;
  }

  .main_contenedorTitulo_subtitulo {
      font-size: 3vw;
  }  

  // Cambiamos el tamaño del contenedor del carrusel y el bloque de texto y cambiamos su disposición para que el bloque esté primero
  .main_contenedorCarrusel {
    height: 65vh;
    flex-direction: column-reverse;
  }

  // Camibamos el tamaó del contenedor del carrusel y las imagenes
  .carousel {
    width: 100%;

    img {
      height: 100%;
    } 
  }

  // Cambiamos el tamaño del bloque de texto de los escenarios
  .carousel_bloque {
    width: 100%;
    height: 43vh;
  }

  // Cambiamos el espaciado y tamaño del logo del footer
  .footer_logo {
    padding-left: 0.3rem;
    width: 6rem;
  }

  // Cambiamos el espaciado y el tamaño de las letras del footer
  .footer_menu {
    ul {
      padding-right: 0.3rem;

        li {
          padding: 1rem 0.3rem;

            a {
                font-size: 1.6vw;
            }
        }
    }
  }
}

@media (max-width: 550px) {

  // Cambiamos el tamaño del contenedor del carrusel
  .main_contenedorCarrusel {
    height: 52vh;
  }

  // Cambiamos el tamaño del contenedor del bloque de texto de escenarios
  .carousel_bloque {
    height: 70vh;
  }

  // Cambiamos el tamaño de las letras del bloque de texto de escenarios
  .bloque_Texto {
    font-size: 2.5vw;
  }

  .bloque_Texto2 {
    font-size: 2.5vw;
  }

  // Hacemos que el logo no esté visible para tener más espacio para el texto del footer
  .footer_logo {
    display: none;
  }
  
  // Cambiamos la disposición de los textos del footer y su tamaño y espaciado
  .footer_menu {
    display: flex;
    justify-content: center;
    width: 100%;

    ul {

        li {
          padding: 1rem 0.5rem;

            a {
                font-size: 2vw;
            }
        }
    }
  }
}
